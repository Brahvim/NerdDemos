------
------ Note:
------

Please compile the engine *and* with a main entry point - include everything in the binary,
and make sure to place the `data` folder wherever necessary.

------
------ Command:
------

`$JAVA_HOME/../graalvm-jdk-17.0.9+11.1/bin/native-image --enable-all-security-services -jar ./TheNerdProject.jar -H:Class=com.brahvim.nerd.nerd_demos.App -H:IncludeResources=".*" -H:ReflectionConfigurationFiles=reflection-config.json && ./TheNerdProject`

------
------ Logs:
------

```
TheNerdProject$ $JAVA_HOME/../graalvm-jdk-17.0.9+11.1/bin/native-image --enable-all-security-services -jar ./TheNerdProject.jar -H:Class=com.brahvim.nerd.App -H:IncludeResources=".*" -H:ReflectionConfigurationFiles=reflection-config.json && ./TheNerdProject
Warning: Option 'EnableAllSecurityServices' is deprecated and might be removed in a future release. Please refer to the GraalVM release notes.
========================================================================================================================
GraalVM Native Image: Generating 'TheNerdProject' (executable)...
========================================================================================================================
[1/8] Initializing...                                                                                    (0.0s @ 0.15GB)
Error: Main entry point class 'com.brahvim.nerd.App' neither found on 
classpath: '/home/brahvim/Code/Java/TheNerdProject/TheNerdProject.jar' nor
modulepath: '/home/brahvim/java/graalvm-jdk-17.0.9+11.1/lib/svm/library-support.jar:/home/brahvim/java/graalvm-jdk-17.0.9+11.1/lib/svm/graal-microservices.jar'.
Error: Use -H:+ReportExceptionStackTraces to print stacktrace of underlying exception
TheNerdProject$ $JAVA_HOME/../graalvm-jdk-17.0.9+11.1/bin/native-image --enable-all-security-services -jar ./TheNerdProject.jar -H:Class=com.brahvim.nerd.nerd_demos.App -H:IncludeResources=".*" -H:ReflectionConfigurationFiles=reflection-config.json && ./TheNerdProject
Warning: Option 'EnableAllSecurityServices' is deprecated and might be removed in a future release. Please refer to the GraalVM release notes.
========================================================================================================================
GraalVM Native Image: Generating 'TheNerdProject' (executable)...
========================================================================================================================
[1/8] Initializing...                                                                                    (2.9s @ 0.18GB)
 Java version: 17.0.9+11-LTS, vendor version: Oracle GraalVM 17.0.9+11.1
 Graal compiler: optimization level: 2, target machine: x86-64-v3, PGO: ML-inferred
 C compiler: gcc (linux, x86_64, 11.4.0)
 Garbage collector: Serial GC (max heap size: 80% of RAM)
[2/8] Performing analysis...  [***]                                                                     (20.3s @ 2.03GB)
   7,483 (81.03%) of  9,235 types reachable
  14,207 (61.67%) of 23,038 fields reachable
  43,606 (55.42%) of 78,683 methods reachable
   2,274 types,    91 fields, and 1,026 methods registered for reflection
      59 types,    59 fields, and    52 methods registered for JNI access
       4 native libraries: dl, pthread, rt, z
[3/8] Building universe...                                                                               (2.7s @ 1.14GB)
[4/8] Parsing methods...      [***]                                                                      (8.0s @ 1.62GB)
[5/8] Inlining methods...     [***]                                                                      (0.8s @ 1.72GB)
[6/8] Compiling methods...    [******]                                                                  (40.4s @ 3.08GB)
[7/8] Layouting methods...    [**]                                                                       (3.2s @ 2.40GB)
[8/8] Creating image...       [***]                                                                      (5.5s @ 3.27GB)
  25.25MB ( 8.76%) for code area:    23,497 compilation units
 261.36MB (90.70%) for image heap:  551,253 objects and 46,604 resources
   1.56MB ( 0.54%) for other data
 288.17MB in total
------------------------------------------------------------------------------------------------------------------------
Top 10 origins of code area:                                Top 10 object types in image heap:
   8.57MB java.desktop                                       233.13MB byte[] for embedded resources
   8.30MB java.base                                            5.18MB byte[] for code metadata
   4.30MB java.xml                                             4.21MB byte[] for java.lang.String
   2.81MB svm.jar (Native Image)                               3.14MB byte[] for general heap data
 298.64kB com.oracle.svm.svm_enterprise                        3.12MB java.lang.Object[]
 240.96kB TheNerdProject.jar                                   2.74MB java.lang.String
 170.64kB java.logging                                         1.39MB java.lang.Class
 109.71kB java.prefs                                           1.08MB java.util.ArrayList
  65.62kB jdk.proxy1                                           1.07MB org.graalvm.collections.Pair
  55.07kB java.datatransfer                                    1.07MB c.o.svm.core.jdk.resources.ResourceStorageEntry
 189.16kB for 8 more packages                                  3.76MB for 1420 more object types
------------------------------------------------------------------------------------------------------------------------
Recommendations:
 G1GC: Use the G1 GC ('--gc=G1') for improved latency and throughput.
 PGO:  Use Profile-Guided Optimizations ('--pgo') for improved throughput.
 AWT:  Use the tracing agent to collect metadata for AWT.
 HEAP: Set max heap for improved and more predictable memory usage.
 CPU:  Enable more CPU features with '-march=native' for improved performance.
------------------------------------------------------------------------------------------------------------------------
                        5.5s (6.5% of total time) in 122 GCs | Peak RSS: 4.77GB | CPU load: 9.35
------------------------------------------------------------------------------------------------------------------------
Produced artifacts:
 /home/brahvim/Code/Java/TheNerdProject/TheNerdProject (executable)
 /home/brahvim/Code/Java/TheNerdProject/libawt.so (jdk_library)
 /home/brahvim/Code/Java/TheNerdProject/libawt_headless.so (jdk_library)
 /home/brahvim/Code/Java/TheNerdProject/libawt_xawt.so (jdk_library)
 /home/brahvim/Code/Java/TheNerdProject/libfontmanager.so (jdk_library)
 /home/brahvim/Code/Java/TheNerdProject/libjava.so (jdk_library_shim)
 /home/brahvim/Code/Java/TheNerdProject/libjavajpeg.so (jdk_library)
 /home/brahvim/Code/Java/TheNerdProject/libjvm.so (jdk_library_shim)
 /home/brahvim/Code/Java/TheNerdProject/liblcms.so (jdk_library)
========================================================================================================================
Finished generating 'TheNerdProject' in 1m 24s.
Fatal error reported via JNI: Could not allocate set properties

Current timestamp: 1704025496948

Printing Instructions (ip=0x0000555d51bf8219):
  0x0000555d51bf81f9: 0x28 0x4c 0x89 0x64 0x24 0x20 0x48 0x89 0x5c 0x24 0x18 0x48 0x8b 0xc7 0x4c 0x8b
  0x0000555d51bf8209: 0xc6 0x48 0x89 0x44 0x24 0x08 0x4c 0x89 0x44 0x24 0x10 0xe8 0x27 0xca 0x08 0x00
  0x0000555d51bf8219: 0x90 0x41 0xc7 0x47 0x14 0x03 0x00 0x00 0x00 0xf0 0x83 0x04 0x24 0x00 0x48 0x8b
  0x0000555d51bf8229: 0x5c 0x24 0x18 0x48 0x8b 0x6c 0x24 0x40 0x4c 0x8b 0x64 0x24 0x20 0x4c 0x8b 0x6c

Top of stack (sp=0x00007ffebe197b40):
  0x00007ffebe197b40: 0x0000555d63a61380 0x0000555d63a61380
  0x00007ffebe197b50: 0x00007f5fe13c0530 0x00007f5fe13c1038
  0x00007ffebe197b60: 0x0000000000000004 0x00007ffebe197bc0
  0x00007ffebe197b70: 0x0000000000000003 0x0000555d63a61380
  0x00007ffebe197b80: 0x00007ffebe198c00 0x00007f5fe13b8197
  0x00007ffebe197b90: 0x0000000000000fcf 0x00007ffebe197be6
  0x00007ffebe197ba0: 0x0000555d63a61fa0 0x00007f5fe130c000
  0x00007ffebe197bb0: 0x00007f5fe1317db6 0x00007f5fe13b7eb0
  0x00007ffebe197bc0: 0x72622f656d6f682f 0x6f432f6d69766861
  0x00007ffebe197bd0: 0x2f6176614a2f6564 0x506472654e656854
  0x00007ffebe197be0: 0x6c2f7463656a6f72 0x6f732e7477616269
  0x00007ffebe197bf0: 0x0000000000000000 0x00000001003e0003
  0x00007ffebe197c00: 0x0000000000000000 0x0000000000000040
  0x00007ffebe197c10: 0x0000000000003160 0x0038004000000000
  0x00007ffebe197c20: 0x001b001c0040000b 0x0000000400000001
  0x00007ffebe197c30: 0x0000000000000000 0x0000000000000000
  0x00007ffebe197c40: 0x0000000000000000 0x0000000000000678
  0x00007ffebe197c50: 0x0000000000000678 0x0000000000001000
  0x00007ffebe197c60: 0x0000000500000001 0x0000000000001000
  0x00007ffebe197c70: 0x0000000000001000 0x0000000000001000
  0x00007ffebe197c80: 0x0000000000000115 0x0000000000000115
  0x00007ffebe197c90: 0x0000000000001000 0x0000000400000001
  0x00007ffebe197ca0: 0x0000000000002000 0x0000000000002000
  0x00007ffebe197cb0: 0x0000000000002000 0x0000000000000110
  0x00007ffebe197cc0: 0x0000000000000110 0x0000000000001000
  0x00007ffebe197cd0: 0x0000000600000001 0x0000000000002e00
  0x00007ffebe197ce0: 0x0000000000003e00 0x0000000000003e00
  0x00007ffebe197cf0: 0x0000000000000220 0x0000000000000228
  0x00007ffebe197d00: 0x0000000000001000 0x0000000600000002
  0x00007ffebe197d10: 0x0000000000002e10 0x0000000000003e10
  0x00007ffebe197d20: 0x0000000000003e10 0x00000000000001d0
  0x00007ffebe197d30: 0x00000000000001d0 0x0000000000000008

Top frame info:
  TotalFrameSize in CodeInfoTable 80
  
Threads:
  0x00007f57dc000b80 STATUS_IN_NATIVE (ALLOW_SAFEPOINT) "Reference Handler" - 0x00007f57edc98110, daemon, stack(0x00007f57e0b01000,0x00007f57e1300000)
  0x0000555d63a61380 STATUS_IN_JAVA (PREVENT_VM_FROM_REACHING_SAFEPOINT) "main" - 0x00007f57edc97f90, stack(0x00007ffebd99c000,0x00007ffebe19a000)
  
VM thread locals for the failing thread 0x0000555d63a61380:
  0 (8 bytes): JNIThreadLocalEnvironment.jniFunctions = (bytes) 
    0x0000555d63a61380: 0x00007f57ed9db008
  8 (8 bytes): StackOverflowCheckImpl.stackBoundaryTL = (Word) 1 (0x0000000000000001)
  16 (4 bytes): Safepoint.safepointRequested = (int) 2147471696 (0x7fffd150)
  20 (4 bytes): StatusSupport.statusTL = (int) 1 (0x00000001)
  24 (32 bytes): ThreadLocalAllocation.regularTLAB = (bytes) 
    0x0000555d63a61398: 0x00007f57f1a00000 0x00007f57f1b00000
    0x0000555d63a613a8: 0x00007f57f1a2bab0 0x0000000000000000
  56 (8 bytes): JavaFrameAnchors.lastAnchor = (Word) 140732087766056 (0x00007ffebe198c28)
  64 (8 bytes): PlatformThreads.currentVThreadId = (long) 1 (0x0000000000000001)
  72 (4 bytes): PlatformThreads.currentThread = (Object) java.lang.Thread (0x00007f57edc97f90)
  80 (8 bytes): SubstrateDiagnostics.threadOnlyAttachedForCrashHandler = (bytes) 
    0x0000555d63a613d0: 0x0000000000000000
  88 (8 bytes): ThreadLocalAllocation.allocatedBytes = (Word) 0 (0x0000000000000000)
  96 (8 bytes): VMThreads.IsolateTL = (Word) 140015416901632 (0x00007f57e1300000)
  104 (8 bytes): VMThreads.OSThreadHandleTL = (Word) 140049780238144 (0x00007f5fe166e740)
  112 (8 bytes): VMThreads.OSThreadIdTL = (Word) 140049780238144 (0x00007f5fe166e740)
  120 (8 bytes): VMThreads.StackBase = (Word) 140732087771136 (0x00007ffebe19a000)
  128 (8 bytes): VMThreads.StackEnd = (Word) 140732079390720 (0x00007ffebd99c000)
  136 (8 bytes): VMThreads.StartedByCurrentIsolate = (bytes) 
    0x0000555d63a61408: 0x0000000000000000
  144 (8 bytes): VMThreads.nextTL = (Word) 0 (0x0000000000000000)
  152 (8 bytes): VMThreads.unalignedIsolateThreadMemoryTL = (Word) 93859592147824 (0x0000555d63a61370)
  160 (4 bytes): AccessControlContextStack = (Object) java.util.ArrayDeque (0x00007f57f1a01660)
  164 (4 bytes): ExceptionUnwind.currentException = (Object) null
  168 (4 bytes): IsolatedCompileClient.currentClient = (Object) null
  172 (4 bytes): IsolatedCompileContext.currentContext = (Object) null
  176 (4 bytes): JNIObjectHandles.handles = (Object) com.oracle.svm.core.handles.ThreadLocalHandles (0x00007f57f1a01130)
  180 (4 bytes): JNIThreadLocalPendingException.pendingException = (Object) null
  184 (4 bytes): JNIThreadLocalPinnedObjects.pinnedObjectsListHead = (Object) null
  188 (4 bytes): JNIThreadOwnedMonitors.ownedMonitors = (Object) null
  192 (4 bytes): NoAllocationVerifier.openVerifiers = (Object) null
  196 (4 bytes): ThreadingSupportImpl.activeTimer = (Object) null
  200 (4 bytes): ActionOnExitSafepointSupport.actionTL = (int) 0 (0x00000000)
  204 (4 bytes): ActionOnTransitionToJavaSupport.actionTL = (int) 0 (0x00000000)
  208 (4 bytes): ImplicitExceptions.implicitExceptionsAreFatal = (int) 0 (0x00000000)
  212 (4 bytes): StackOverflowCheckImpl.yellowZoneStateTL = (int) 2130640638 (0x7efefefe)
  216 (4 bytes): StatusSupport.safepointBehaviorTL = (int) 1 (0x00000001)
  220 (4 bytes): ThreadingSupportImpl.currentPauseDepth = (int) 0 (0x00000000)
  
No VMOperation in progress

The 15 most recent VM operation status changes (oldest first):
  
Counters:
  
Java frame anchors for the failing thread 0x0000555d63a61380:
  Anchor 0x00007ffebe198c28 LastJavaSP 0x00007ffebe198c10 LastJavaIP 0x0000555d51c7c9f0
  
Stacktrace for the failing thread 0x0000555d63a61380:
  SP 0x00007ffebe197b40 IP 0x0000555d51bf8219  [image code] com.oracle.svm.core.code.IsolateEnterStub.JNIFunctions_FatalError_5ea28336426fe0a26a33d6b62307157f39a34d1c(IsolateEnterStub.java:0)
  SP 0x00007ffebe198c10 IP 0x0000555d51c7c9f0  [image code] com.oracle.svm.core.jni.JNIOnLoadFunctionPointer.invoke(JNILibraryInitializer.java)
  SP 0x00007ffebe198c10 IP 0x0000555d51c7c9f0  [image code] com.oracle.svm.core.jni.JNILibraryInitializer.callOnLoadFunction(JNILibraryInitializer.java:71)
  SP 0x00007ffebe198c50 IP 0x0000555d51c7cd73  [image code] com.oracle.svm.core.jni.JNILibraryInitializer.initialize(JNILibraryInitializer.java:132)
  SP 0x00007ffebe198c70 IP 0x0000555d51c64890  [image code] com.oracle.svm.core.jdk.NativeLibrarySupport.addLibrary(NativeLibrarySupport.java:204)
  SP 0x00007ffebe198cd0 IP 0x0000555d51c65b3f  [image code] com.oracle.svm.core.jdk.NativeLibrarySupport.loadLibrary0(NativeLibrarySupport.java:160)
  SP 0x00007ffebe198d00 IP 0x0000555d51c65db6  [image code] com.oracle.svm.core.jdk.NativeLibrarySupport.loadLibraryRelative(NativeLibrarySupport.java:123)
  SP 0x00007ffebe198d60 IP 0x0000555d52f568a5  [image code] java.lang.ClassLoader.loadLibrary(ClassLoader.java:50)
  SP 0x00007ffebe198d60 IP 0x0000555d52f568a5  [image code] java.lang.Runtime.loadLibrary0(Runtime.java:818)
  SP 0x00007ffebe198d60 IP 0x0000555d52f568a5  [image code] java.lang.System.loadLibrary(System.java:1989)
  SP 0x00007ffebe198d60 IP 0x0000555d52f568a5  [image code] sun.awt.X11GraphicsEnvironment$1.run(X11GraphicsEnvironment.java:63)
  SP 0x00007ffebe198d90 IP 0x0000555d5269e2f5  [image code] java.security.AccessController.executePrivileged(AccessController.java:171)
  SP 0x00007ffebe198db0 IP 0x0000555d52f578c8  [image code] java.security.AccessController.doPrivileged(AccessController.java:318)
  SP 0x00007ffebe198db0 IP 0x0000555d52f578c8  [image code] sun.awt.X11GraphicsEnvironment.<clinit>(X11GraphicsEnvironment.java:60)
  SP 0x00007ffebe198dd0 IP 0x0000555d51a5cb1d  [image code] com.oracle.svm.core.classinitialization.ClassInitializationInfo.invokeClassInitializer(ClassInitializationInfo.java:407)
  SP 0x00007ffebe198de0 IP 0x0000555d51a5ada5  [image code] com.oracle.svm.core.classinitialization.ClassInitializationInfo.doInitialize(ClassInitializationInfo.java:323)
  SP 0x00007ffebe198e10 IP 0x0000555d51a5b1f6  [image code] com.oracle.svm.core.classinitialization.ClassInitializationInfo.initialize(ClassInitializationInfo.java:272)
  SP 0x00007ffebe1990d0 IP 0x0000555d522f5c0f  [image code] sun.awt.PlatformGraphicsInfo.createGE(PlatformGraphicsInfo.java:36)
  SP 0x00007ffebe1990d0 IP 0x0000555d522f5c0f  [image code] java.awt.GraphicsEnvironment$LocalGE.createGE(GraphicsEnvironment.java:93)
  SP 0x00007ffebe1990d0 IP 0x0000555d522f5c0f  [image code] java.awt.GraphicsEnvironment$LocalGE.<clinit>(GraphicsEnvironment.java:84)
  SP 0x00007ffebe1990f0 IP 0x0000555d51a5cb1d  [image code] com.oracle.svm.core.classinitialization.ClassInitializationInfo.invokeClassInitializer(ClassInitializationInfo.java:407)
  SP 0x00007ffebe199100 IP 0x0000555d51a5ada5  [image code] com.oracle.svm.core.classinitialization.ClassInitializationInfo.doInitialize(ClassInitializationInfo.java:323)
  SP 0x00007ffebe199130 IP 0x0000555d51a5b1f6  [image code] com.oracle.svm.core.classinitialization.ClassInitializationInfo.initialize(ClassInitializationInfo.java:272)
  SP 0x00007ffebe1993f0 IP 0x0000555d51a2e5b2  [image code] java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment(GraphicsEnvironment.java:106)
  SP 0x00007ffebe1993f0 IP 0x0000555d51a2e5b2  [image code] com.brahvim.nerd.processing_wrapper.NerdSketch.<init>(NerdSketch.java:82)
  SP 0x00007ffebe199440 IP 0x0000555d51a34399  [image code] com.oracle.svm.core.code.FactoryMethodHolder.NerdSketch_constructor_2738ee7539e29712b01f54945d402d657d90a62c(FactoryMethodHolder.java:0)
  SP 0x00007ffebe199440 IP 0x0000555d51a34399  [image code] com.brahvim.nerd.nerd_demos.App$1.createNerdSketch(App.java:44)
  SP 0x00007ffebe199440 IP 0x0000555d51a34399  [image code] com.brahvim.nerd.processing_wrapper.NerdSketchBuilder.build(NerdSketchBuilder.java:100)
  SP 0x00007ffebe199470 IP 0x0000555d51a2ca25  [image code] com.brahvim.nerd.nerd_demos.App.startOpenGlSketch(App.java:54)
  SP 0x00007ffebe1994b0 IP 0x0000555d51a40755  [image code] com.brahvim.nerd.nerd_demos.App.main(App.java:33)
  SP 0x00007ffebe1994b0 IP 0x0000555d51a40755  [image code] com.oracle.svm.core.JavaMainWrapper.runCore0(JavaMainWrapper.java:178)
  SP 0x00007ffebe1994d0 IP 0x0000555d51bfedfd  [image code] com.oracle.svm.core.JavaMainWrapper.runCore(JavaMainWrapper.java:136)
  SP 0x00007ffebe1994d0 IP 0x0000555d51bfedfd  [image code] com.oracle.svm.core.JavaMainWrapper.doRun(JavaMainWrapper.java:233)
  SP 0x00007ffebe1994d0 IP 0x0000555d51bfedfd  [image code] com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:219)
  SP 0x00007ffebe1994d0 IP 0x0000555d51bfedfd  [image code] com.oracle.svm.core.code.IsolateEnterStub.JavaMainWrapper_run_3148eece06270530b6e0d4d60311411342c82698(IsolateEnterStub.java:0)
  
VM mutexes:
  mutex "referencePendingList" is unlocked.
  mutex "thread" is unlocked.
  mutex "freeList" is unlocked.
  mutex "mainVMOperationControlWorkQueue" is unlocked.
  
AOT compiled code is mapped at 0x0000555d51a2b000 - 0x0000555d5336a66f

Heap settings and statistics:
  Supports isolates: true
  Heap base: 0x00007f57e1300000
  Object reference size: 4
  Aligned chunk size: 1048576
  Incremental collections: 0
  Complete collections: 0
  
Native image heap boundaries:
  ReadOnly Primitives: 0x00007f57e1401030 - 0x00007f57ed689da0
  ReadOnly References: 0x00007f57ed689da0 - 0x00007f57ed9da568
  ReadOnly Relocatables: 0x00007f57ed9db000 - 0x00007f57edaf79d8
  Writable Primitives: 0x00007f57edaf8000 - 0x00007f57edc06f50
  Writable References: 0x00007f57edc06f50 - 0x00007f57ee458aa8
  Writable Huge: 0x00007f57ee500038 - 0x00007f57ee627cc0
  ReadOnly Huge: 0x00007f57ee628038 - 0x00007f57f195c788

Heap:
  Young generation: 
    Eden: 
      edenSpace:
        aligned: 0/0 unaligned: 0/0
    Survivors: 
      Survivor-1 From:
        aligned: 0/0 unaligned: 0/0
      Survivor-1 To:
        aligned: 0/0 unaligned: 0/0
      Survivor-2 From:
        aligned: 0/0 unaligned: 0/0
      Survivor-2 To:
        aligned: 0/0 unaligned: 0/0
      Survivor-3 From:
        aligned: 0/0 unaligned: 0/0
      Survivor-3 To:
        aligned: 0/0 unaligned: 0/0
      Survivor-4 From:
        aligned: 0/0 unaligned: 0/0
      Survivor-4 To:
        aligned: 0/0 unaligned: 0/0
      Survivor-5 From:
        aligned: 0/0 unaligned: 0/0
      Survivor-5 To:
        aligned: 0/0 unaligned: 0/0
      Survivor-6 From:
        aligned: 0/0 unaligned: 0/0
      Survivor-6 To:
        aligned: 0/0 unaligned: 0/0
      Survivor-7 From:
        aligned: 0/0 unaligned: 0/0
      Survivor-7 To:
        aligned: 0/0 unaligned: 0/0
      Survivor-8 From:
        aligned: 0/0 unaligned: 0/0
      Survivor-8 To:
        aligned: 0/0 unaligned: 0/0
      Survivor-9 From:
        aligned: 0/0 unaligned: 0/0
      Survivor-9 To:
        aligned: 0/0 unaligned: 0/0
      Survivor-10 From:
        aligned: 0/0 unaligned: 0/0
      Survivor-10 To:
        aligned: 0/0 unaligned: 0/0
      Survivor-11 From:
        aligned: 0/0 unaligned: 0/0
      Survivor-11 To:
        aligned: 0/0 unaligned: 0/0
      Survivor-12 From:
        aligned: 0/0 unaligned: 0/0
      Survivor-12 To:
        aligned: 0/0 unaligned: 0/0
      Survivor-13 From:
        aligned: 0/0 unaligned: 0/0
      Survivor-13 To:
        aligned: 0/0 unaligned: 0/0
      Survivor-14 From:
        aligned: 0/0 unaligned: 0/0
      Survivor-14 To:
        aligned: 0/0 unaligned: 0/0
      Survivor-15 From:
        aligned: 0/0 unaligned: 0/0
      Survivor-15 To:
        aligned: 0/0 unaligned: 0/0
  Old generation: 
    oldFromSpace:
      aligned: 0/0 unaligned: 0/0
    oldToSpace:
      aligned: 0/0 unaligned: 0/0
    
  Unused:
    aligned: 0/0

TheNerdProject$ 
```
